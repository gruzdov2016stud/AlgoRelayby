package nodes.switchgear;

import lombok.Getter;
import lombok.Setter;
import nodes.common.LN;
import objects.data.enums.StVal;
import objects.descriptionInfo.DPL;
import objects.info.BCR;
import objects.info.INS;
import objects.info.SPS;
import objects.managment.DPC;
import objects.managment.SPC;

/**
 * LN: Логический узел «Силовой выключатель»
 * Функции, моделируемые логическим узлом XCBR:
 * 1) Режим работы логического узла;
 * 2) Отображение статуса места управления;
 * 3) Управление местом управления;
 * 4) Сигналы о статусе параметров.
 * Применяется для реализации функции физического силового выключателя.
 * Применяется один экземпляр ЛУ на механизм.
 * При пофазном исполнении выключателя используются экземпляры на каждую из фаз и один общий экземпляр.
 * Экземпляры ЛУ размещаются в логических устройствах управления РЗА/АСУ ТП.
 *
 */

@Getter @Setter
public class XCBR extends LN {
    ///////////////////////////////////////////////////////////////////////////
    // todo Входные параметры
    ///////////////////////////////////////////////////////////////////////////
    /**Положение переключателя*/
    private DPC Pos = new DPC();
    ///////////////////////////////////////////////////////////////////////////
    // todo Выходные параметры
    ///////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    // todo Реализация узла
    ///////////////////////////////////////////////////////////////////////////
    public XCBR(){}
    /**
     * @param pos - сигнал на отключение из CSWI
     */
    public XCBR(DPC pos) {
        Pos = pos;
    }

    @Override
    public void process() {
        /**Отключение выключателя при условии, что выключатель включен и поступил сигнал на срабатывание*/
        if(Pos.getCtIVal().getValue() && Pos.getStVal().getValue()==StVal.OFF){
            Pos.getStVal().setValue(StVal.ON);
        }
        if(!Pos.getCtIVal().getValue() && Pos.getStVal().getValue()==StVal.ON){
            Pos.getStVal().setValue(StVal.OFF);
        }
    }

// ================================================ Не используемые ================================================
//todo Информация об общих логических узлах
    /**
     *Локальная операция («локальная» означает нахождение вне сети
     * связи автоматизации подстанции; непосредственный контроль с помощью
     * аппаратного подключения)
     */
    private SPS Loc = new SPS();
    /**
     *Состояние работоспособности внешнего оборудования
     */
    private INS EEHealth = new INS();
    /**
     *Паспортная табличка внешнего оборудования
     */
    private DPL EEName = new DPL();
    /**
     *Счетчик числа переключений
     */
    private INS OpCnt = new INS();
//todo Данные по управлению
    /**
     *Блокировка отключения
     */
    private SPC BlkOpn = new SPC();
    /**
     *Блокировка включения
     */
    private SPC BlkCls = new SPC();
    /**
     *Двигатель зарядного устройства включен
     */
    private SPC ChaMotEna = new SPC();
//todo Измеренные значения
    /**
     *Общее количество переключаемых амперов, со сбросом
     */
    private BCR SumSwARs = new BCR();
//todo Информация о статусе
    /**
     *Функциональные возможности выключателя
     */
    private INS CBOpCap = new INS();
    /**
     *Возможности переключения по совпадению фазы
     */
    private INS POWCap = new INS();
    /**
     *Функциональные характеристики выключателя при полной нагрузке
     */
    private INS MaxOpCap = new INS();

}
